<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team3webnovel.mappers.NovelMapper">

    <!-- 소설 목록 조회 (전체 소설) -->
    <select id="getNovelList" resultType="com.team3webnovel.vo.NovelVo">
        SELECT 
            novel_id AS novelId,
            title,
            created_at AS creationDate
        FROM novel_detail
        ORDER BY created_at DESC
    </select>

    <!-- 특정 사용자 ID로 소설 목록 조회 -->
    <select id="getNovelListByUserId" parameterType="int" resultType="com.team3webnovel.vo.NovelVo">
        SELECT 
		    n.novel_id AS novelId,
		    n.title,
		    n.genre,
		    n.status,
		    n.creation_id,
		    n.intro,
		    n.created_at AS createdAt,
		    i.image_url AS imageUrl
		FROM 
		    novel n
		LEFT JOIN image_generation_data i ON n.creation_id = i.creation_id
		WHERE 
		    n.user_id = #{userId}  
		ORDER BY 
		    n.created_at DESC
    </select>

    <!-- 새 소설 추가 -->
    <insert id="insertNovel" parameterType="com.team3webnovel.vo.NovelVo">
        INSERT INTO novel (
            novel_id, title, intro, user_id, genre, created_at, creation_id
        ) VALUES (
            novel_seq.NEXTVAL, #{title}, #{intro}, #{userId}, #{genre}, #{createdAt}, #{creationId}
        )
    </insert>
    
    <!-- 성민 -->
    <insert id="insertNovelDetail" parameterType="com.team3webnovel.vo.NovelVo">
    	INSERT INTO novel_detail (
    		novel_id, title, episode_no, contents, image_id, bgm_id, VISIBILITY
    	) VALUES (
    		#{novelId}, #{title}, #{episodeNo}, #{contents}, #{imageId}, #{bgmId}, 'private'
    	)
    </insert>
    
    <select id="getNovelDetailByNovelId" parameterType="int" resultType="com.team3webnovel.vo.NovelVo">
    	SELECT 
		    NOVEL_ID as novelId,
		    EPISODE_NO as episodeNo,
		    CONTENTS as contents,
		    CREATED_AT as createdAt,
		    IMAGE_ID as imageId,
		    TITLE as title,
		    BGM_ID as bgmId,
		    VISIBILITY
		FROM 
		    NOVEL_DETAIL
		WHERE 
		    NOVEL_ID = #{novelId}
    </select>
    
    <update id="updateStatus" parameterType="com.team3webnovel.vo.NovelVo">
	   	UPDATE NOVEL
	    SET STATUS = #{status}
	    WHERE NOVEL_ID = #{novelId}
    </update>
    
	<select id="getMainNovelList" resultType="com.team3webnovel.vo.NovelVo">
	    SELECT 
	        n.NOVEL_ID AS novelId,
	        n.GENRE,
	        n.STATUS,
	        n.USER_ID AS userId,
	        n.TITLE,
	        n.CREATION_ID AS creationId,
	        n.INTRO,
	        n.CREATED_AT AS createdAt,
	        igd.IMAGE_URL AS imageUrl  -- IMAGE_URL 컬럼 추가
	    FROM 
	        novel n
	    LEFT JOIN 
	        IMAGE_GENERATION_DATA igd ON n.CREATION_ID = igd.CREATION_ID
	    WHERE 
	        n.STATUS IS NOT NULL
	</select>
    
	<select id="getNovelDetail" parameterType="com.team3webnovel.vo.NovelVo" resultType="com.team3webnovel.vo.NovelVo">
		SELECT 
		    NOVEL_ID as novelId,
		    EPISODE_NO as episodeNo,
		    CONTENTS,
		    CREATED_AT as createdAt,
		    IMAGE_ID as imageId,
		    TITLE,
		    BGM_ID as bgmId
		FROM 
		    NOVEL_DETAIL
		WHERE 
		    NOVEL_ID = #{novelId} AND EPISODE_NO = #{episodeNo}
	</select>
	
	<update id="updateNovelDetail" parameterType="com.team3webnovel.vo.NovelVo">
	    UPDATE NOVEL_DETAIL
	    SET
	        CONTENTS = #{contents},
	        IMAGE_ID = #{imageId},
	        TITLE = #{title},
	        BGM_ID = #{bgmId},
	        CREATED_AT = CURRENT_TIMESTAMP
	    WHERE
	        NOVEL_ID = #{novelId}
	    AND
	        EPISODE_NO = #{episodeNo}
	</update>
	
	<update id="updateEpisodeVisibility" parameterType="com.team3webnovel.vo.NovelVo">
	    UPDATE novel_detail
	    SET visibility = #{visibility}
	    WHERE novel_id = #{novelId} AND episode_no = #{episodeNo}
	</update>
	
	
	

    <!-- 성민 -->
    

    <!-- 소설 수정 -->
    <update id="updateNovel" parameterType="com.team3webnovel.vo.NovelVo">
        UPDATE novel_detail
        SET title = #{title},
            episode_no = #{episodeNo},
            contents = #{contents}
        WHERE novel_id = #{novelId}
    </update>

    <!-- 소설 삭제 -->
    <delete id="deleteNovel" parameterType="int">
        DELETE FROM novel WHERE novel_id = #{novelId}
    </delete>

    <!-- 소설 검색 (제목에서 검색) -->
    <select id="searchNovels" parameterType="string" resultType="com.team3webnovel.vo.NovelVo">
        SELECT 
            novel_id AS novelId,
            title,
            created_at AS creationDate
        FROM novel
        WHERE title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_at DESC
    </select>

</mapper>
